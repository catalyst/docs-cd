#!/usr/bin/env ansible-playbook
---

# This playbook illustrates how to deploy and configure a docs-cd to a compute
# instance on an OpenStack based cloud.

- name: Deploy the docs-cd compute instance on the Catalyst Cloud
  hosts: localhost
  vars:
    # OpenStack authentication variables (not required if RC sourced)
    #os_auth_url: https://api.cloud.catalyst.net.nz:5000/v2.0
    #os_region: nz-por-1
    #os_az: nz-por-1a
    #os_project_name: projectname
    #os_username: username
    #os_password: password
    # Attributes used for launching the compute instance (required)
    image: ubuntu-16.04-x86_64
    private_network_name: private-net
    keypair_name: keypair
    instance_name: docs-cd
    flavor: c1.c1r1
    security_group_name: docs-cd
    user_data: cloud-init.yaml
    expose_ssh_to: 0.0.0.0/0

  tasks:
    #- name: Fetch information about the Catalyst Cloud
    #  os_client_config:
    #    clouds:
    #      - catalyst_cloud

    # Connect to the Catalyst Cloud. No auth parameters are needed, because an
    # openstack.rc file is expected to be sourced.
    - name: Connect to the Catalyst Cloud
      os_auth:
    #    auth:
    #      auth_url: "{{ os_auth_url }}"
    #      username: "{{ os_username }}"
    #      password: "{{ os_password }}"
    #      project_name: "{{ os_project_name }}"

    - name: Create a security group for docs-cd
      os_security_group:
        state: present
        name: "{{ security_group_name }}"
        description: SSH, HTTP and HTTPS access to docs-cd

    - name: Create a security group rule for SSH access
      os_security_group_rule:
        state: present
        security_group: "{{ security_group_name }}"
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: "{{ expose_ssh_to }}"


    - name: Create a security group rule for HTTP access
      os_security_group_rule:
        state: present
        security_group: "{{ security_group_name }}"
        protocol: tcp
        port_range_min: 80
        port_range_max: 80
        remote_ip_prefix: 0.0.0.0/0

    - name: Create a security group rule for HTTPS access
      os_security_group_rule:
        state: present
        security_group: "{{ security_group_name }}"
        protocol: tcp
        port_range_min: 443
        port_range_max: 443
        remote_ip_prefix: 0.0.0.0/0

    - name: Create the docs-cd compute instance
      os_server:
        state: present
        name: "{{ instance_name }}"
        image: "{{ image }}"
        key_name: "{{ keypair_name }}"
        flavor: "{{ flavor }}"
        userdata: "{{ lookup('file', user_data) }}"
        nics:
          - net-name: "{{ private_network_name }}"
        security_groups: "default,{{ security_group_name }}"
        auto_ip: true
      register: instance

    # Add the compute instance as a new host to Ansible's in memory inventory,
    # so that it can be utilised by another play on the same playbook.
    - add_host: name={{ instance.server.public_v4 }}
                groups=created_nodes
                ansible_user=ubuntu
                instance_name={{ instance.server.name }}

# Copy the config.yaml file to the compute instance
- name: Configure the compute instance
  hosts: created_nodes
  become: yes
  become_method: sudo
  become_user: root
  tasks:
    - name: Wait for SSH to come up
      wait_for_connection:
    - name: Copy config.yaml to /home/ubuntu/docs-cd/config.yaml
      copy:
        src: config.yaml
        dest: /home/ubuntu/docs-cd/config.yaml
